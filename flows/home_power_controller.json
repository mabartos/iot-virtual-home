[
    {
        "id": "ee1061974e02e17c",
        "type": "tab",
        "label": "HomePowerController",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "50b83b65e65c5d79",
        "type": "mqtt in",
        "z": "ee1061974e02e17c",
        "name": "Central Heating Consumption",
        "topic": "MUSI-IoT-2022/AlinaMartin/centralHeating/energy",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "838e41213a61d9fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 280,
        "wires": [
            [
                "1efe746bd7235f29"
            ]
        ]
    },
    {
        "id": "52a93f8dc4730497",
        "type": "influxdb out",
        "z": "ee1061974e02e17c",
        "influxdb": "deacb2722d06694f",
        "name": "heating-consumption",
        "measurement": "heating-consumption",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "alinaMartin",
        "bucket": "home1",
        "x": 900,
        "y": 280,
        "wires": []
    },
    {
        "id": "08c20309e68cb095",
        "type": "debug",
        "z": "ee1061974e02e17c",
        "name": "InfluxDB",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 340,
        "wires": []
    },
    {
        "id": "37c8d744faa77e9e",
        "type": "catch",
        "z": "ee1061974e02e17c",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 240,
        "y": 780,
        "wires": [
            [
                "4f2bf206ad27c158"
            ]
        ]
    },
    {
        "id": "4f2bf206ad27c158",
        "type": "debug",
        "z": "ee1061974e02e17c",
        "name": "Catch All",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 510,
        "y": 780,
        "wires": []
    },
    {
        "id": "1efe746bd7235f29",
        "type": "change",
        "z": "ee1061974e02e17c",
        "name": "Format for InfluxDB",
        "rules": [
            {
                "t": "set",
                "p": "fields.consumption",
                "pt": "msg",
                "to": "payload.value",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "payload.time",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 280,
        "wires": [
            [
                "08c20309e68cb095",
                "52a93f8dc4730497"
            ]
        ]
    },
    {
        "id": "1867ab5d3723faec",
        "type": "mqtt in",
        "z": "ee1061974e02e17c",
        "name": "Lights Living Room Consumption",
        "topic": "MUSI-IoT-2022/AlinaMartin/livingRoom/lights/energy",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "838e41213a61d9fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 400,
        "wires": [
            [
                "35e6758f4ff1f183"
            ]
        ]
    },
    {
        "id": "35e6758f4ff1f183",
        "type": "change",
        "z": "ee1061974e02e17c",
        "name": "Format for InfluxDB",
        "rules": [
            {
                "t": "set",
                "p": "fields.consumption",
                "pt": "msg",
                "to": "payload.value",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "payload.time",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "08c20309e68cb095",
                "5aa374f636ee58c5"
            ]
        ]
    },
    {
        "id": "5aa374f636ee58c5",
        "type": "influxdb out",
        "z": "ee1061974e02e17c",
        "influxdb": "deacb2722d06694f",
        "name": "lights-living-room-consumption",
        "measurement": "lights-living-room-consumption",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "alinaMartin",
        "bucket": "home1",
        "x": 930,
        "y": 400,
        "wires": []
    },
    {
        "id": "2e6acfe40b7f1a4f",
        "type": "function",
        "z": "ee1061974e02e17c",
        "name": "Get Average of temperatures",
        "func": "const storedTemp = flow.get(\"stored_temperature\");\n\nif (storedTemp === undefined || storedTemp === null){\n    flow.set(\"stored_temperature\", msg.payload);\n    msg.payload.distribute=false;\n}else{\n    const currentTemp = msg.payload.value;\n    const average = (storedTemp.value + currentTemp) / 2;\n    msg.payload={}\n    msg.payload.avgTemperature = average;\n    flow.set(\"stored_temperature\", null);\n    msg.payload.distribute = true;\n}\n\nconsole.debug(msg)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 580,
        "wires": [
            [
                "4275503af45d0389"
            ]
        ]
    },
    {
        "id": "28b71e80aba30ef7",
        "type": "debug",
        "z": "ee1061974e02e17c",
        "name": "Average Temperature",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 680,
        "wires": []
    },
    {
        "id": "736a3e25608f6c50",
        "type": "mqtt out",
        "z": "ee1061974e02e17c",
        "name": "Average temperature",
        "topic": "MUSI-IoT-2022/AlinaMartin/outside/average-temperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "838e41213a61d9fb",
        "x": 1220,
        "y": 580,
        "wires": []
    },
    {
        "id": "4c4606e8c3559c80",
        "type": "mqtt in",
        "z": "ee1061974e02e17c",
        "name": "Current temperature",
        "topic": "MUSI-IoT-2022/AlinaMartin/outside/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "838e41213a61d9fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 580,
        "wires": [
            [
                "2e6acfe40b7f1a4f"
            ]
        ]
    },
    {
        "id": "4275503af45d0389",
        "type": "switch",
        "z": "ee1061974e02e17c",
        "name": "Should send average?",
        "property": "payload.distribute",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 940,
        "y": 580,
        "wires": [
            [
                "736a3e25608f6c50",
                "28b71e80aba30ef7"
            ]
        ]
    },
    {
        "id": "838e41213a61d9fb",
        "type": "mqtt-broker",
        "name": "localhost",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "deacb2722d06694f",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "localhost",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": false
    }
]