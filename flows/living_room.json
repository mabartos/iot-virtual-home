[
    {
        "id": "bfc35229e11153c5",
        "type": "tab",
        "label": "Living Room",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "53e5c85fceaa8688",
        "type": "mqtt in",
        "z": "bfc35229e11153c5",
        "name": "Lights topic",
        "topic": "MUSI-IoT-2022/AlinaMartin/livingRoom/lights",
        "qos": "2",
        "datatype": "utf8",
        "broker": "838e41213a61d9fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 500,
        "wires": [
            [
                "466c24463e04d80d"
            ]
        ]
    },
    {
        "id": "84df49c91b784167",
        "type": "mqtt out",
        "z": "bfc35229e11153c5",
        "name": "Current power consumption",
        "topic": "MUSI-IoT-2022/AlinaMartin/livingRoom/lights/energy",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "838e41213a61d9fb",
        "x": 1460,
        "y": 660,
        "wires": []
    },
    {
        "id": "472320d95962dfef",
        "type": "inject",
        "z": "bfc35229e11153c5",
        "name": "Initiator",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "none",
        "payloadType": "str",
        "x": 220,
        "y": 760,
        "wires": [
            [
                "80fe3f7dcd2a53cb"
            ]
        ]
    },
    {
        "id": "c40f06c30a6db4ec",
        "type": "function",
        "z": "bfc35229e11153c5",
        "name": "Store State",
        "func": "flow.set(\"light_state\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 500,
        "wires": [
            [
                "3ec32ae32627ad8b",
                "a51f22aa14cc6993"
            ]
        ]
    },
    {
        "id": "3ec32ae32627ad8b",
        "type": "debug",
        "z": "bfc35229e11153c5",
        "name": "Store State",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 500,
        "wires": []
    },
    {
        "id": "ba2b84eb4fbf9bc9",
        "type": "function",
        "z": "bfc35229e11153c5",
        "name": "Current power",
        "func": "const state = msg.state\n\nif (state && state === \"ON\") {\n    msg.payload = 60\n} else {\n    msg.payload = 0\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 740,
        "wires": [
            [
                "bff056838495423b"
            ]
        ]
    },
    {
        "id": "b2c3adc4241acb41",
        "type": "debug",
        "z": "bfc35229e11153c5",
        "name": "Power consumption",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 740,
        "wires": []
    },
    {
        "id": "466c24463e04d80d",
        "type": "function",
        "z": "bfc35229e11153c5",
        "name": "Add timestamp",
        "func": "msg.payload = {\n    value : msg.payload,\n    time : (new Date()).toISOString()\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 500,
        "wires": [
            [
                "c40f06c30a6db4ec"
            ]
        ]
    },
    {
        "id": "bff056838495423b",
        "type": "function",
        "z": "bfc35229e11153c5",
        "name": "Add timestamp",
        "func": "msg.payload = {\n    value : msg.payload,\n    time : (new Date()).toISOString()\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 740,
        "wires": [
            [
                "84df49c91b784167",
                "b2c3adc4241acb41"
            ]
        ]
    },
    {
        "id": "a51f22aa14cc6993",
        "type": "change",
        "z": "bfc35229e11153c5",
        "name": "Format for InfluxDB",
        "rules": [
            {
                "t": "set",
                "p": "fields.state",
                "pt": "msg",
                "to": "payload.value",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "tags.timestamp",
                "pt": "msg",
                "to": "payload.time",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields,tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 420,
        "wires": [
            [
                "ae6dd2eb253dff07",
                "3662257bdc111d19"
            ]
        ]
    },
    {
        "id": "ae6dd2eb253dff07",
        "type": "influxdb out",
        "z": "bfc35229e11153c5",
        "influxdb": "deacb2722d06694f",
        "name": "lights-living-room-consumption",
        "measurement": "lights-living-room-state",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "alinaMartin",
        "bucket": "home1",
        "x": 1270,
        "y": 420,
        "wires": []
    },
    {
        "id": "3662257bdc111d19",
        "type": "debug",
        "z": "bfc35229e11153c5",
        "name": "Save state to InfluxDB",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 340,
        "wires": []
    },
    {
        "id": "ad7c55ba941cad94",
        "type": "switch",
        "z": "bfc35229e11153c5",
        "name": "Get State",
        "property": "state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 760,
        "wires": [
            [
                "ba2b84eb4fbf9bc9"
            ],
            [
                "4ef1255176261a15"
            ]
        ]
    },
    {
        "id": "80fe3f7dcd2a53cb",
        "type": "function",
        "z": "bfc35229e11153c5",
        "name": "Get Flow State",
        "func": "const state = flow.get(\"light_state\")\n\nif(state !== undefined && state !== null){\n    msg.state=state.value;\n} else {\n    msg.state=null;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 760,
        "wires": [
            [
                "ad7c55ba941cad94"
            ]
        ]
    },
    {
        "id": "4ef1255176261a15",
        "type": "influxdb in",
        "z": "bfc35229e11153c5",
        "influxdb": "deacb2722d06694f",
        "name": "Get State Influx",
        "query": "from(bucket: \"home1\")\n  |> range(start: 0)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"heating-state\")\n  |> filter(fn: (r) => r[\"_field\"] == \"state\")\n  |> group(columns: [\"*\"])\n  |> sort(columns: [\"timestamp\"], desc: true)\n  |> limit(n: 1)",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "alinaMartin",
        "x": 700,
        "y": 940,
        "wires": [
            [
                "537971934ccce401"
            ]
        ]
    },
    {
        "id": "537971934ccce401",
        "type": "function",
        "z": "bfc35229e11153c5",
        "name": "Convert from InfluxDB",
        "func": "const item=msg.payload[0];\n\nif(!!item){\n    msg.state=item[\"_value\"];\n    msg.payload={}\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 940,
        "wires": [
            [
                "ba2b84eb4fbf9bc9"
            ]
        ]
    },
    {
        "id": "838e41213a61d9fb",
        "type": "mqtt-broker",
        "name": "localhost",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "deacb2722d06694f",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "localhost",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": false
    }
]