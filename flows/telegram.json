[
    {
        "id": "1f9f90c6366b8eba",
        "type": "tab",
        "label": "Warning to Telegram",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "power_state",
                "value": "0",
                "type": "num"
            }
        ]
    },
    {
        "id": "1583ec5000455945",
        "type": "mqtt in",
        "z": "1f9f90c6366b8eba",
        "name": "Current power consumption Telegram",
        "topic": "MUSI-IoT-2022/AlinaMartin/general/energy/current",
        "qos": "2",
        "datatype": "json",
        "broker": "838e41213a61d9fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 100,
        "wires": [
            [
                "4b1cdf01a7dc75f6"
            ]
        ]
    },
    {
        "id": "5efac2aa15c3032d",
        "type": "telegram sender",
        "z": "1f9f90c6366b8eba",
        "name": "IoTBot",
        "bot": "532baf459f75e4b6",
        "haserroroutput": true,
        "outputs": 2,
        "x": 1190,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4b1cdf01a7dc75f6",
        "type": "function",
        "z": "1f9f90c6366b8eba",
        "name": "Set threshold",
        "func": "const current_consumption = msg.payload;\n\nmsg.payload = {}\nmsg.payload.value = current_consumption;\nmsg.payload.power_state = flow.get('power_state');\nmsg.payload.content = 'The current power consumption is ' + current_consumption;\nmsg.payload.chatId = -844585211;\nmsg.payload.threshold = 1500;\nmsg.payload.type = \"message\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set('power_state', 0);\n",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 100,
        "wires": [
            [
                "937cbd57a8038f8a",
                "fc346844a2f290db"
            ]
        ]
    },
    {
        "id": "937cbd57a8038f8a",
        "type": "debug",
        "z": "1f9f90c6366b8eba",
        "name": "Telegram message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 40,
        "wires": []
    },
    {
        "id": "8e4b344c5974357e",
        "type": "switch",
        "z": "1f9f90c6366b8eba",
        "name": "Check consumption",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.threshold",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 100,
        "wires": [
            [
                "088a1bab1ebb28c2"
            ]
        ]
    },
    {
        "id": "3dfd6e521c9cce79",
        "type": "switch",
        "z": "1f9f90c6366b8eba",
        "name": "Check consumption",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "payload.threshold",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 160,
        "wires": [
            [
                "4b99e7f62fb928c6",
                "5ca20daf2150852e"
            ]
        ]
    },
    {
        "id": "088a1bab1ebb28c2",
        "type": "function",
        "z": "1f9f90c6366b8eba",
        "name": "set power_state 1",
        "func": "flow.set('power_state', 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 100,
        "wires": [
            [
                "5efac2aa15c3032d",
                "5f2150601cf98425"
            ]
        ]
    },
    {
        "id": "4b99e7f62fb928c6",
        "type": "function",
        "z": "1f9f90c6366b8eba",
        "name": "set power state 0",
        "func": "flow.set('power_state', 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "fc346844a2f290db",
        "type": "switch",
        "z": "1f9f90c6366b8eba",
        "name": "Check power_state",
        "property": "payload.power_state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 100,
        "wires": [
            [
                "8e4b344c5974357e",
                "0b86d36e0387606e"
            ],
            [
                "3dfd6e521c9cce79"
            ]
        ]
    },
    {
        "id": "0b86d36e0387606e",
        "type": "debug",
        "z": "1f9f90c6366b8eba",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.value",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 40,
        "wires": []
    },
    {
        "id": "5f2150601cf98425",
        "type": "debug",
        "z": "1f9f90c6366b8eba",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.power_state",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 40,
        "wires": []
    },
    {
        "id": "5ca20daf2150852e",
        "type": "debug",
        "z": "1f9f90c6366b8eba",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.value",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 220,
        "wires": []
    },
    {
        "id": "838e41213a61d9fb",
        "type": "mqtt-broker",
        "name": "localhost",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "532baf459f75e4b6",
        "type": "telegram bot",
        "botname": "IoTAlinaAndMartinBot",
        "usernames": "",
        "chatids": "-844585211",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    }
]