[
    {
        "id": "1f9f90c6366b8eba",
        "type": "tab",
        "label": "Warning to Telegram",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "power_state",
                "value": "0",
                "type": "num"
            }
        ]
    },
    {
        "id": "7d96e1127ae10206",
        "type": "group",
        "z": "1f9f90c6366b8eba",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0fd67672b9425588",
            "936deac2c40ff734",
            "242de0ba895eae22"
        ],
        "x": 94,
        "y": 339,
        "w": 452,
        "h": 142
    },
    {
        "id": "dc7d6e79a414c7b3",
        "type": "group",
        "z": "1f9f90c6366b8eba",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1583ec5000455945",
            "5efac2aa15c3032d",
            "4b1cdf01a7dc75f6",
            "937cbd57a8038f8a",
            "8e4b344c5974357e",
            "3dfd6e521c9cce79",
            "088a1bab1ebb28c2",
            "4b99e7f62fb928c6",
            "fc346844a2f290db",
            "0b86d36e0387606e",
            "5f2150601cf98425",
            "5ca20daf2150852e"
        ],
        "x": 34,
        "y": 39,
        "w": 1292,
        "h": 262
    },
    {
        "id": "1583ec5000455945",
        "type": "mqtt in",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "Current power consumption Telegram",
        "topic": "MUSI-IoT-2022/AlinaMartin/general/energy/current",
        "qos": "2",
        "datatype": "json",
        "broker": "838e41213a61d9fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 140,
        "wires": [
            [
                "4b1cdf01a7dc75f6"
            ]
        ]
    },
    {
        "id": "5efac2aa15c3032d",
        "type": "telegram sender",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "IoTBot",
        "bot": "532baf459f75e4b6",
        "haserroroutput": true,
        "outputs": 2,
        "x": 1250,
        "y": 140,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4b1cdf01a7dc75f6",
        "type": "function",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "Set threshold",
        "func": "const current_consumption = msg.payload;\n\nmsg.payload = {}\nmsg.payload.value = current_consumption;\nmsg.payload.power_state = flow.get('power_state');\nmsg.payload.content = 'The current power consumption is ' + current_consumption;\nmsg.payload.chatId = -844585211;\nmsg.payload.threshold = flow.get(\"threshold\");\nmsg.payload.type = \"message\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set('power_state', 0);\n",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 140,
        "wires": [
            [
                "937cbd57a8038f8a",
                "fc346844a2f290db"
            ]
        ]
    },
    {
        "id": "937cbd57a8038f8a",
        "type": "debug",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "Telegram message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 80,
        "wires": []
    },
    {
        "id": "8e4b344c5974357e",
        "type": "switch",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "Check consumption",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.threshold",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 140,
        "wires": [
            [
                "088a1bab1ebb28c2"
            ]
        ]
    },
    {
        "id": "3dfd6e521c9cce79",
        "type": "switch",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "Check consumption",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "payload.threshold",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 200,
        "wires": [
            [
                "4b99e7f62fb928c6",
                "5ca20daf2150852e"
            ]
        ]
    },
    {
        "id": "088a1bab1ebb28c2",
        "type": "function",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "set power_state 1",
        "func": "flow.set('power_state', 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 140,
        "wires": [
            [
                "5efac2aa15c3032d",
                "5f2150601cf98425"
            ]
        ]
    },
    {
        "id": "4b99e7f62fb928c6",
        "type": "function",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "set power state 0",
        "func": "flow.set('power_state', 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "fc346844a2f290db",
        "type": "switch",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "Check power_state",
        "property": "payload.power_state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 140,
        "wires": [
            [
                "8e4b344c5974357e",
                "0b86d36e0387606e"
            ],
            [
                "3dfd6e521c9cce79"
            ]
        ]
    },
    {
        "id": "0b86d36e0387606e",
        "type": "debug",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.value",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 80,
        "wires": []
    },
    {
        "id": "5f2150601cf98425",
        "type": "debug",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.power_state",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 80,
        "wires": []
    },
    {
        "id": "5ca20daf2150852e",
        "type": "debug",
        "z": "1f9f90c6366b8eba",
        "g": "dc7d6e79a414c7b3",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.value",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 260,
        "wires": []
    },
    {
        "id": "0fd67672b9425588",
        "type": "mqtt in",
        "z": "1f9f90c6366b8eba",
        "g": "7d96e1127ae10206",
        "name": "Threshold",
        "topic": "MUSI-IoT-2022/AlinaMartin/general/set-alarm-treshold",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "838e41213a61d9fb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 380,
        "wires": [
            [
                "936deac2c40ff734",
                "242de0ba895eae22"
            ]
        ]
    },
    {
        "id": "936deac2c40ff734",
        "type": "function",
        "z": "1f9f90c6366b8eba",
        "g": "7d96e1127ae10206",
        "name": "Store threshold",
        "func": "if(msg.payload!==undefined){\n    flow.set(\"threshold\", msg.payload);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"threshold\", 1500);",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "242de0ba895eae22",
        "type": "debug",
        "z": "1f9f90c6366b8eba",
        "g": "7d96e1127ae10206",
        "name": "Stored alarm threshold",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 440,
        "wires": []
    },
    {
        "id": "838e41213a61d9fb",
        "type": "mqtt-broker",
        "name": "localhost",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "532baf459f75e4b6",
        "type": "telegram bot",
        "botname": "IoTAlinaAndMartinBot",
        "usernames": "",
        "chatids": "-844585211",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    }
]